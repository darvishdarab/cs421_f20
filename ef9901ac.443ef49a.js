(window.webpackJsonp=window.webpackJsonp||[]).push([[45],{106:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return i})),a.d(t,"metadata",(function(){return o})),a.d(t,"rightToc",(function(){return s})),a.d(t,"default",(function(){return l}));var n=a(2),r=(a(0),a(116));const i={id:"sql",title:"Creating Content Using JDBC and SQL",sidebar_label:"Structured Query Language"},o={unversionedId:"readings/db/sql",id:"readings/db/sql",isDocsHomePage:!1,title:"Creating Content Using JDBC and SQL",description:'We will interact with relational databases using JDBC and the Structured Query Language (SQL). SQL is a domain specific language designed for updating and retrieving data in table-based databases. We will not cover it in class but you will likely need to use it. SQL is very easy and descriptive. In most cases, a simple Google search will be sufficient to find "how to" do something with SQL. My go-to place to lookup SQL syntax is https://www.w3schools.com/sql/.',source:"@site/docs\\readings\\db\\sql.md",permalink:"/cs421_f20/docs/readings/db/sql",editUrl:"https://darvishdarab.github.io/cs421_f20/docs/readings/db/sql.md",sidebar_label:"Structured Query Language",sidebar:"docs",previous:{title:"The Java Database Connectivity (JDBC) API",permalink:"/cs421_f20/docs/readings/db/jdbc"},next:{title:"Persist Objects in Databases",permalink:"/cs421_f20/docs/readings/db/persist_objects_in_db"}},s=[{value:"Create a table",id:"create-a-table",children:[]},{value:"Insert data into table",id:"insert-data-into-table",children:[]},{value:"Search for records in a table",id:"search-for-records-in-a-table",children:[]},{value:"Parameterized SQL with JDBC PreparedStatement",id:"parameterized-sql-with-jdbc-preparedstatement",children:[]}],c={rightToc:s};function l({components:e,...t}){return Object(r.b)("wrapper",Object(n.a)({},c,t,{components:e,mdxType:"MDXLayout"}),Object(r.b)("p",null,'We will interact with relational databases using JDBC and the Structured Query Language (SQL). SQL is a domain specific language designed for updating and retrieving data in table-based databases. We will not cover it in class but you will likely need to use it. SQL is very easy and descriptive. In most cases, a simple Google search will be sufficient to find "how to" do something with SQL. My go-to place to lookup SQL syntax is ',Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"https://www.w3schools.com/sql/"}),"https://www.w3schools.com/sql/"),"."),Object(r.b)("div",{className:"admonition admonition-tip alert alert--success"},Object(r.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(r.b)("h5",{parentName:"div"},Object(r.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(r.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"}),Object(r.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"})))),"tip")),Object(r.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(r.b)("p",{parentName:"div"},"If you are interested in learning more, ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"http://sqlzoo.net/"}),"SQLZoo")," is one of the best and popular website for learning SQL online. For general knowledge, checkout ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"https://en.wikipedia.org/wiki/SQL"}),"SQL on Wikipedia"),"."))),Object(r.b)("p",null,"Recall, from previous section, that we have created a connection to our SQLite database through JDBC:"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),'final String URI = "jdbc:sqlite:./MyBookApps.db"; \nConnection conn = DriverManager.getConnection(URI);\n')),Object(r.b)("h2",{id:"create-a-table"},"Create a table"),Object(r.b)("p",null,"To create a table, we can execute the following SQL statement:"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-sql"}),'"CREATE TABLE IF NOT EXISTS Books (title VARCHAR(100), isbn VARCHAR(14), \n              publisher VARCHAR(14), year INTEGER, author VARCHAR(100));\n')),Object(r.b)("p",null,"Notice SQL reads like English! There is really no need to explain it; is there?!"),Object(r.b)("p",null,"We can execute a SQL statement by (1) creating a ",Object(r.b)("inlineCode",{parentName:"p"},"Statement")," object and (2) invoking its ",Object(r.b)("inlineCode",{parentName:"p"},"execute")," method, passing the SQL statement as an argument to it. "),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),'Statement st = conn.createStatement();\nString sql = "CREATE TABLE IF NOT EXISTS Books (title VARCHAR(150), isbn VARCHAR(14), \n                         publisher VARCHAR(150), year INTEGER, author VARCHAR(100));";\nst.execute(sql);\n')),Object(r.b)("h2",{id:"insert-data-into-table"},"Insert data into table"),Object(r.b)("p",null,"To insert data, we can execute a SQL statement such as:"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-sql"}),"INSERT INTO Book(title, isbn, publisher, year, author)\nVALUES ('1984', '978-0451524935', 'Signet Classic', 1961, 'George Orwell');\n")),Object(r.b)("p",null,"We can reuse the ",Object(r.b)("inlineCode",{parentName:"p"},"Statement")," object (",Object(r.b)("inlineCode",{parentName:"p"},"st"),") to execute the aforementioned ",Object(r.b)("inlineCode",{parentName:"p"},"INSERT")," statement."),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),"sql = \"INSERT INTO Book(title, isbn, publisher, year, author)\n       VALUES ('1984', '978-0451524935', 'Signet Classic', \n       1961, 'George Orwell');\";\nst.execute(sql);\n")),Object(r.b)("p",null,"Let's insert two more!"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),"sql = \"INSERT INTO Book(title, isbn, publisher, year, author)\n       VALUES ('The Glass Hotel', '978-0525521143', 'Knopf', \n       2020, 'Emily St. John Mandel');\";\nst.execute(sql);\n\nsql = \"INSERT INTO Book(title, isbn, publisher, year, author)\n       VALUES ('The Catcher in the Rye', '978-7543321724', \n       'Little, Brown and Company', 1991, 'J.D Salinger');\";\nst.execute(sql);\n")),Object(r.b)("h2",{id:"search-for-records-in-a-table"},"Search for records in a table"),Object(r.b)("p",null,"SQL is particularly powerful when it comes to querying data. Here is a simple example to search for all courses where the course name contains ",Object(r.b)("inlineCode",{parentName:"p"},"he")," characters:"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-sql"}),"SELECT * FROM Book \nWHERE title LIKE '%he%';\n")),Object(r.b)("p",null,"Let's run this query using JDBC:"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),'sql = "SELECT * FROM Books WHERE title LIKE \'%he%\';";\nResultSet rs = st.executeQuery(sql);\nwhile (rs.next()) {\n  System.out.println("Book title: " + rs.getString("title"));\n  System.out.println("Book author: " + rs.getAuthor("author"));\n}\n')),Object(r.b)("p",null,"Notice I've used a different method, ",Object(r.b)("inlineCode",{parentName:"p"},"executeQuery")," to run the above SQL statement. The ",Object(r.b)("inlineCode",{parentName:"p"},"executeQuery")," method returns a ",Object(r.b)("inlineCode",{parentName:"p"},"ResultSet")," object which you can iterate over to extract the retrieved data."),Object(r.b)("h2",{id:"parameterized-sql-with-jdbc-preparedstatement"},"Parameterized SQL with JDBC PreparedStatement"),Object(r.b)("p",null,"A JDBC ",Object(r.b)("inlineCode",{parentName:"p"},"PreparedStatement")," is a special kind of JDBC ",Object(r.b)("inlineCode",{parentName:"p"},"Statement")," object with some useful additional features. Namely, it makes it easy to insert ",Object(r.b)("em",{parentName:"p"},"parameters")," into the SQL statement."),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),'Book b1 = new Book ("The Catcher in the Rye", "978-7543321724", \n                          "Little, Brown and Company", 1991, 1);\nPreparedStatement sql = "INSERT INTO Books (title, isbn, publisher, year, author) \n                         VALUES (?, ?, ?, ?, ?);";\npst = conn.prepareStatement(sql);\npst.setString(1, b1.getTitle());\npst.setString(2, b1.getIsbn());\npst.setString(3, b1.getPublisher());\npst.setInt(4, b1.getYear());\npst.setString(5, b1.getAuthor());\npst.execute();\n')))}l.isMDXComponent=!0},116:function(e,t,a){"use strict";a.d(t,"a",(function(){return p})),a.d(t,"b",(function(){return m}));var n=a(0),r=a.n(n);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function c(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var l=r.a.createContext({}),b=function(e){var t=r.a.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):s(s({},t),e)),a},p=function(e){var t=b(e.components);return r.a.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},d=r.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,i=e.originalType,o=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),p=b(a),d=n,m=p["".concat(o,".").concat(d)]||p[d]||u[d]||i;return a?r.a.createElement(m,s(s({ref:t},l),{},{components:a})):r.a.createElement(m,s({ref:t},l))}));function m(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=a.length,o=new Array(i);o[0]=d;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:n,o[1]=s;for(var l=2;l<i;l++)o[l]=a[l];return r.a.createElement.apply(null,o)}return r.a.createElement.apply(null,a)}d.displayName="MDXCreateElement"}}]);