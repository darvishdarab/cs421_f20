(window.webpackJsonp=window.webpackJsonp||[]).push([[88],{162:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return r})),a.d(t,"metadata",(function(){return o})),a.d(t,"rightToc",(function(){return c})),a.d(t,"default",(function(){return b}));var n=a(3),i=(a(0),a(186));const r={id:"oop",title:"Object-Oriented Programming",sidebar_label:"Object-Oriented Programming"},o={unversionedId:"readings/oop",id:"readings/oop",isDocsHomePage:!1,title:"Object-Oriented Programming",description:"Prelude: It has been said that teaching object-oriented programming (OOP) to those with no programming background is easier than those with experience in (procedural or functional) programming. This is because experienced programmers get used to procedural (or functional) thinking and modeling. On the other hand, for non-programmers, the object-oriented way of decomposing a problem is similar to the way they are used to look at real life situations. Indeed, we live in a world made up of interacting objects.",source:"@site/docs\\readings\\oop.md",slug:"/readings/oop",permalink:"/cs421_f20/docs/readings/oop",editUrl:"https://darvishdarab.github.io/cs421_f20/docs/readings/oop.md",version:"current",sidebar_label:"Object-Oriented Programming",sidebar:"docs",previous:{title:"Agile Estimating",permalink:"/cs421_f20/docs/readings/project_planning"},next:{title:"Object-Oriented Analysis & Design",permalink:"/cs421_f20/docs/readings/ooad"}},c=[{value:"Encapsulation",id:"encapsulation",children:[]},{value:"Inheritance and Polymorphism",id:"inheritance-and-polymorphism",children:[]}],s={rightToc:c};function b({components:e,...t}){return Object(i.b)("wrapper",Object(n.a)({},s,t,{components:e,mdxType:"MDXLayout"}),Object(i.b)("p",null,Object(i.b)("em",{parentName:"p"},"Prelude"),": It has been said that teaching object-oriented programming (OOP) to those with no programming background is easier than those with experience in (procedural or functional) programming.",Object(i.b)("sup",Object(n.a)({parentName:"p"},{id:"fnref-1"}),Object(i.b)("a",Object(n.a)({parentName:"sup"},{href:"#fn-1",className:"footnote-ref"}),"1"))," This is because experienced programmers get used to procedural (or functional) thinking and modeling. On the other hand, for non-programmers, the object-oriented way of decomposing a problem is similar to the way they are used to look at real life situations. Indeed, we live in a world made up of ",Object(i.b)("em",{parentName:"p"},"interacting objects"),". "),Object(i.b)("div",{className:"admonition admonition-info alert alert--info"},Object(i.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(i.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(i.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"})))),"What is an Object?")),Object(i.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(i.b)("p",{parentName:"div"},'"An object represents an individual, identifiable item, unit, or entity, either real or abstract, with a well-defined role in the problem domain."',Object(i.b)("sup",Object(n.a)({parentName:"p"},{id:"fnref-2"}),Object(i.b)("a",Object(n.a)({parentName:"sup"},{href:"#fn-2",className:"footnote-ref"}),"2"))))),Object(i.b)("p",null,"In a ",Object(i.b)("em",{parentName:"p"},"class-based")," object-oriented programming language",Object(i.b)("sup",Object(n.a)({parentName:"p"},{id:"fnref-3"}),Object(i.b)("a",Object(n.a)({parentName:"sup"},{href:"#fn-3",className:"footnote-ref"}),"3")),", like Java, any object must be ",Object(i.b)("em",{parentName:"p"},"an instance of")," a class."),Object(i.b)("div",{className:"admonition admonition-info alert alert--info"},Object(i.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(i.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(i.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"})))),"What is a Class?")),Object(i.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(i.b)("p",{parentName:"div"},"A class defines the attributes, structure and operations that are common to a set of objects, including how the objects are created. "))),Object(i.b)("p",null,"A class is an ",Object(i.b)("strong",{parentName:"p"},"abstraction")," or a ",Object(i.b)("em",{parentName:"p"},"model"),"."),Object(i.b)("div",{className:"admonition admonition-caution alert alert--warning"},Object(i.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(i.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"}),Object(i.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"})))),"What is a model?")),Object(i.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(i.b)("p",{parentName:"div"},"A model is a partial representation of something else (a concept, a system, a pattern, etc.). It helps us to visualize and understand the original and its role in a problem domain. "))),Object(i.b)("p",null,"When we model something (i.e. create an abstraction of it), we focus on some of its characteristics\n(that matter to the problem at hand) and ignore others (that are deemed irrelevant for solving the problem).\nFor example, this class models (the idea, concept of) circle in Grade 3 (K5) Geometry:"),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),"public class Circle {\n    private double radius;\n\n    public Circle() { radius = 1; }\n    public void setRadius (double r) { radius = r; }\n    public double getRadius() { return radius; }\n    public double getArea() { \n        return Math.PI * Math.pow(radius, 2); \n    }\n}\n")),Object(i.b)("p",null,"And here we have a few different ",Object(i.b)("inlineCode",{parentName:"p"},"Circle")," objects (instances):"),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),"Circle c1 = new Circle();\nCircle c2 = new Circle();\nc2.setRadius(3);\nCircle c3 = new Circle();\n")),Object(i.b)("p",null,"An object has ",Object(i.b)("strong",{parentName:"p"},"state")," and ",Object(i.b)("strong",{parentName:"p"},"behavior"),"."),Object(i.b)("p",null,"The ",Object(i.b)("em",{parentName:"p"},"state")," of an object (a.k.a. its ",Object(i.b)("strong",{parentName:"p"},"properties")," or ",Object(i.b)("strong",{parentName:"p"},"attributes"),") are its essential and distinctive characteristics. A class declares attributes of its objects through its data ",Object(i.b)("em",{parentName:"p"},"fields")," (instance variables). The state of an object is ",Object(i.b)("em",{parentName:"p"},"value")," of those data fields at any point in time.\nA ",Object(i.b)("inlineCode",{parentName:"p"},"Circle")," class, for example, has a data field ",Object(i.b)("inlineCode",{parentName:"p"},"radius"),", which is the property that characterizes a circle.\nA circle object with radius of ",Object(i.b)("inlineCode",{parentName:"p"},"1")," cm is an instance of the ",Object(i.b)("inlineCode",{parentName:"p"},"Circle")," class. If we update the radius of this circle to a new value, we have changed its state."),Object(i.b)("p",null,"The ",Object(i.b)("em",{parentName:"p"},"behavior")," of an object is the set of operations, or ",Object(i.b)("strong",{parentName:"p"},"responsibilities"),", it must fulfill. This includes\nthe responsibility to provide and modify state information when asked by ",Object(i.b)("em",{parentName:"p"},"clients")," (other objects or services).\nA behavior of an object is defined by the instance method that ",Object(i.b)("em",{parentName:"p"},"implements")," that behavior.\nTo invoke a method on an object is to ask the object to fulfill a behavior (to perform an action).\nFor example, you may ask a circle object to provide you with its state by invoking the method ",Object(i.b)("inlineCode",{parentName:"p"},"getRadius()")," which is declared and implemented in the ",Object(i.b)("inlineCode",{parentName:"p"},"Circle")," class. "),Object(i.b)("h2",{id:"encapsulation"},"Encapsulation"),Object(i.b)("p",null,Object(i.b)("em",{parentName:"p"},"A quick detour"),": an oven is an object! There is a lot going on inside an oven but you interact with it through certain set operations. You, for example, can set the temperature of an oven and thus changing its state (temperature). How an oven exactly operates is not your concern. An oven is, in some sense, a black box to you. "),Object(i.b)("p",null,Object(i.b)("img",{src:a(314).default})),Object(i.b)("p",null,"Objects, in software as in real-life, are build in a way to ",Object(i.b)("em",{parentName:"p"},"encapsulate")," their state and behavior in a\nunit (a bundle, a capsule, a black box, ...) with an ",Object(i.b)("strong",{parentName:"p"},"interface")," to allow (and simplify) access for the user."),Object(i.b)("p",null,"Class is a unit of encapsulation in OOP; it provides the machinery for bundling state and behavior (data fields and methods that work on that data) within one unit. The state is typically ",Object(i.b)("em",{parentName:"p"},"private")," to the object and not (directly) visible to clients. This concept of denying direct access to the state of an object is called ",Object(i.b)("strong",{parentName:"p"},"information hiding"),". In addition to the state, some of the behavior (responsibilities) of an object may also be hidden and only used by the object. The set of visible (",Object(i.b)("em",{parentName:"p"},"public"),") behavior of an object form its ",Object(i.b)("strong",{parentName:"p"},"interface")," and define how it ",Object(i.b)("em",{parentName:"p"},"collaborates")," (acts and reacts) with other objects."),Object(i.b)("h2",{id:"inheritance-and-polymorphism"},"Inheritance and Polymorphism"),Object(i.b)("p",null,"A ",Object(i.b)("em",{parentName:"p"},"superclass"),"/",Object(i.b)("em",{parentName:"p"},"subclass"),' relationship may exist between two classes when one class "is a kind of" the other class. Subclasses ',Object(i.b)("strong",{parentName:"p"},"inherit")," the structure and behavior of their superclass. Therefore, common behavior and attributes can be defined once in the superclass rather than repeated in each subclass."),Object(i.b)("div",{className:"admonition admonition-info alert alert--info"},Object(i.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(i.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(i.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"})))),"Object Composition")),Object(i.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(i.b)("p",{parentName:"div"},"Another effective way to reuse code (but without inheritance) is through ",Object(i.b)("strong",{parentName:"p"},"object composition")," which, in a nutshell, is a way to combine objects into more complex ones. (E.g. put a cooktop and an oven together to get a stove!)"))),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Polymorphism")," (having many forms) is the ability of an entity in an object-oriented model to refer to objects of different classes at different times. For example, a method that accepts an object of certain class will also operate on its subclasses. "),Object(i.b)("div",{className:"footnotes"},Object(i.b)("hr",{parentName:"div"}),Object(i.b)("ol",{parentName:"div"},Object(i.b)("li",Object(n.a)({parentName:"ol"},{id:"fn-1"}),"Alan Key, for example, discovered that children learned ",Object(i.b)("a",Object(n.a)({parentName:"li"},{href:"https://en.wikipedia.org/wiki/Smalltalk"}),"SmallTalk"),' faster than experienced programmers; see\nKey A., "Microelectronics and Personal Computer." Scientific American 237(3):230-244 (1977)',Object(i.b)("a",Object(n.a)({parentName:"li"},{href:"#fnref-1",className:"footnote-backref"}),"\u21a9")),Object(i.b)("li",Object(n.a)({parentName:"ol"},{id:"fn-2"}),'Smith, M., and Tockey S. "An Integrated Approach to Software Requirement Definition Using Objects."\nBoeing Commercial Airplane Support Division, Seatle, WA, (1988).',Object(i.b)("a",Object(n.a)({parentName:"li"},{href:"#fnref-2",className:"footnote-backref"}),"\u21a9")),Object(i.b)("li",Object(n.a)({parentName:"ol"},{id:"fn-3"}),"There are also ",Object(i.b)("em",{parentName:"li"},"prototype-based")," object-oriented programming languages, like JavaScript. ",Object(i.b)("a",Object(n.a)({parentName:"li"},{href:"#fnref-3",className:"footnote-backref"}),"\u21a9")))))}b.isMDXComponent=!0},186:function(e,t,a){"use strict";a.d(t,"a",(function(){return p})),a.d(t,"b",(function(){return h}));var n=a(0),i=a.n(n);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function c(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,n,i=function(e,t){if(null==e)return{};var a,n,i={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var b=i.a.createContext({}),l=function(e){var t=i.a.useContext(b),a=t;return e&&(a="function"==typeof e?e(t):c(c({},t),e)),a},p=function(e){var t=l(e.components);return i.a.createElement(b.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return i.a.createElement(i.a.Fragment,{},t)}},d=i.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,r=e.originalType,o=e.parentName,b=s(e,["components","mdxType","originalType","parentName"]),p=l(a),d=n,h=p["".concat(o,".").concat(d)]||p[d]||m[d]||r;return a?i.a.createElement(h,c(c({ref:t},b),{},{components:a})):i.a.createElement(h,c({ref:t},b))}));function h(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var r=a.length,o=new Array(r);o[0]=d;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:n,o[1]=c;for(var b=2;b<r;b++)o[b]=a[b];return i.a.createElement.apply(null,o)}return i.a.createElement.apply(null,a)}d.displayName="MDXCreateElement"},314:function(e,t,a){"use strict";a.r(t),t.default=a.p+"assets/images/oven-a724bec085265c0c3805af4f085d3d82.jpg"}}]);