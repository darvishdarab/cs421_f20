(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{147:function(e,t,a){"use strict";a.d(t,"a",(function(){return s})),a.d(t,"b",(function(){return O}));var n=a(0),i=a.n(n);function o(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function b(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){o(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function c(e,t){if(null==e)return{};var a,n,i=function(e,t){if(null==e)return{};var a,n,i={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var l=i.a.createContext({}),p=function(e){var t=i.a.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):b(b({},t),e)),a},s=function(e){var t=p(e.components);return i.a.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return i.a.createElement(i.a.Fragment,{},t)}},m=i.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,o=e.originalType,r=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),s=p(a),m=n,O=s["".concat(r,".").concat(m)]||s[m]||d[m]||o;return a?i.a.createElement(O,b(b({ref:t},l),{},{components:a})):i.a.createElement(O,b({ref:t},l))}));function O(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=a.length,r=new Array(o);r[0]=m;var b={};for(var c in t)hasOwnProperty.call(t,c)&&(b[c]=t[c]);b.originalType=e,b.mdxType="string"==typeof e?e:n,r[1]=b;for(var l=2;l<o;l++)r[l]=a[l];return i.a.createElement.apply(null,r)}return i.a.createElement.apply(null,a)}m.displayName="MDXCreateElement"},58:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return r})),a.d(t,"metadata",(function(){return b})),a.d(t,"rightToc",(function(){return c})),a.d(t,"default",(function(){return p}));var n=a(2),i=a(6),o=(a(0),a(147)),r={id:"hw2",title:"Homework 2"},b={unversionedId:"hw/hw2",id:"hw/hw2",isDocsHomePage:!1,title:"Homework 2",description:"You will be completing the implementation of persistence with SQLite database for MyBooksApp as well as writing some unit tests to make sure your  implementations work as expected.",source:"@site/docs\\hw\\hw2.md",permalink:"/cs421_f20/docs/hw/hw2",editUrl:"https://darvishdarab.github.io/cs421_f20/docs/hw/hw2.md"},c=[{value:"Task",id:"task",children:[]},{value:"Submission",id:"submission",children:[]}],l={rightToc:c};function p(e){var t=e.components,a=Object(i.a)(e,["components"]);return Object(o.b)("wrapper",Object(n.a)({},l,a,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,"You will be completing the implementation of persistence with SQLite database for MyBooksApp as well as writing some unit tests to make sure your  implementations work as expected.    "),Object(o.b)("table",null,Object(o.b)("thead",{parentName:"table"},Object(o.b)("tr",{parentName:"thead"},Object(o.b)("th",Object(n.a)({parentName:"tr"},{align:null})),Object(o.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Day"),Object(o.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Date"))),Object(o.b)("tbody",{parentName:"table"},Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Release"),Object(o.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Thu"),Object(o.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"SEP 17")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Due"),Object(o.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Thu"),Object(o.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"SEP 24 @ 11pm (EST)")))),Object(o.b)("h2",{id:"task"},"Task"),Object(o.b)("p",null,"Grab a copy of the ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/jhu-oose/MyBooksApp"}),"MyBookApp repo")," available under ",Object(o.b)("inlineCode",{parentName:"p"},"jhu-oose")," github organization. The current implemetation contains a couple of data persistence functionalities, namely ",Object(o.b)("inlineCode",{parentName:"p"},"add")," and ",Object(o.b)("inlineCode",{parentName:"p"},"listAll"),", for ",Object(o.b)("inlineCode",{parentName:"p"},"Author")," class under ",Object(o.b)("inlineCode",{parentName:"p"},"src/main/java/persistence")," folder. Your task is to:"),Object(o.b)("ol",null,Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"Similar to the existing ",Object(o.b)("inlineCode",{parentName:"p"},"AuthorDao"),", add a new ",Object(o.b)("em",{parentName:"p"},"interface")," under the same java package named ",Object(o.b)("inlineCode",{parentName:"p"},"BookDao"),".")),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"Similar to the existing ",Object(o.b)("inlineCode",{parentName:"p"},"Sql2oAuthorDao")," class, implement a class named ",Object(o.b)("inlineCode",{parentName:"p"},"Sql2oBookDao")," that ",Object(o.b)("em",{parentName:"p"},"implements")," the ",Object(o.b)("inlineCode",{parentName:"p"},"BookDao")," ",Object(o.b)("em",{parentName:"p"},"interface")," defined in step 1.")),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"To make our DAO classes support all basic CRUD operations, add the following methods to both ",Object(o.b)("inlineCode",{parentName:"p"},"AuthorDao")," and ",Object(o.b)("inlineCode",{parentName:"p"},"BookDao")," interfaces and implement them in their corresponding implementing classes (i.e. ",Object(o.b)("inlineCode",{parentName:"p"},"Sql2oAuthorDao")," and ",Object(o.b)("inlineCode",{parentName:"p"},"Sql2oBookDao"),"):"),Object(o.b)("ol",{parentName:"li"},Object(o.b)("li",{parentName:"ol"},Object(o.b)("inlineCode",{parentName:"li"},"boolean delete(Book book) / boolean delete(Author author)"),": when called, the record in the correspoding table with ",Object(o.b)("inlineCode",{parentName:"li"},"book.isbn"),"/",Object(o.b)("inlineCode",{parentName:"li"},"author.name")," is removed. If the ",Object(o.b)("inlineCode",{parentName:"li"},"sql")," query is successfully executed, ",Object(o.b)("inlineCode",{parentName:"li"},"true")," is returned. If something goes wrong with query execution, ",Object(o.b)("inlineCode",{parentName:"li"},"DaoException")," is thrown."),Object(o.b)("li",{parentName:"ol"},Object(o.b)("inlineCode",{parentName:"li"},"boolean update(Book book)")," / ",Object(o.b)("inlineCode",{parentName:"li"},"boolean update(Author author)"),": when called, the record in the correspoding table with ",Object(o.b)("inlineCode",{parentName:"li"},"book.isbn"),"/",Object(o.b)("inlineCode",{parentName:"li"},"author.name")," should be located and get upated. As an example, if ",Object(o.b)("inlineCode",{parentName:"li"},"author.name"),' is "Franz Kafka", then calling ',Object(o.b)("inlineCode",{parentName:"li"},"update(author)")," will result in the author with ",Object(o.b)("inlineCode",{parentName:"li"},"name"),' "Franz Kafka" in the ',Object(o.b)("inlineCode",{parentName:"li"},"Authors")," table get updated with ",Object(o.b)("inlineCode",{parentName:"li"},"author.numOfBooks")," and ",Object(o.b)("inlineCode",{parentName:"li"},"author.nationality")," values. If the sql query is successfully executed, ",Object(o.b)("inlineCode",{parentName:"li"},"true")," is returned. If something goes wrong with query execution, ",Object(o.b)("inlineCode",{parentName:"li"},"DaoException")," is thrown.",Object(o.b)("div",Object(n.a)({parentName:"li"},{className:"admonition admonition-info alert alert--info"}),Object(o.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(o.b)("h5",{parentName:"div"},Object(o.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(o.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(o.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"})))),"info")),Object(o.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(o.b)("p",{parentName:"div"},"Note that an author is updated/deleted based on its ",Object(o.b)("inlineCode",{parentName:"p"},"name")," property and a book is updated/deleted based on its ",Object(o.b)("inlineCode",{parentName:"p"},"isbn"),". Remember, ",Object(o.b)("inlineCode",{parentName:"p"},"name")," in ",Object(o.b)("inlineCode",{parentName:"p"},"Authors")," table and ",Object(o.b)("inlineCode",{parentName:"p"},"isbn")," in ",Object(o.b)("inlineCode",{parentName:"p"},"Books")," table are unique!")))))),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"Write at least four different unit test cases for ",Object(o.b)("inlineCode",{parentName:"p"},"Sql2oAuthorDao")," in Junit and another four for ",Object(o.b)("inlineCode",{parentName:"p"},"Sql2oBookDao"),"; that is to write at least one junit test case for each of the CRUD operations for each of the classes. Feel free to write more (creative!) test cases."),Object(o.b)("div",Object(n.a)({parentName:"li"},{className:"admonition admonition-info alert alert--info"}),Object(o.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(o.b)("h5",{parentName:"div"},Object(o.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(o.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(o.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"})))),"info")),Object(o.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(o.b)("p",{parentName:"div"},"Write your unit tests in a new java class named ",Object(o.b)("inlineCode",{parentName:"p"},"DBDaoCRUDTest.java")," under ",Object(o.b)("inlineCode",{parentName:"p"},"src/test/java/")," folder."))),Object(o.b)("div",Object(n.a)({parentName:"li"},{className:"admonition admonition-tip alert alert--success"}),Object(o.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(o.b)("h5",{parentName:"div"},Object(o.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(o.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"}),Object(o.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"})))),"tip")),Object(o.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(o.b)("p",{parentName:"div"},"Your test class ",Object(o.b)("inlineCode",{parentName:"p"},"DBDaoCRUDTest.java")," should be self-sufficient, meaning that before unit tests get executed, if needed, a database with ",Object(o.b)("inlineCode",{parentName:"p"},"Books")," and ",Object(o.b)("inlineCode",{parentName:"p"},"Authors")," tables should be created where ",Object(o.b)("inlineCode",{parentName:"p"},"Authors")," table is parent of ",Object(o.b)("inlineCode",{parentName:"p"},"Books"),". Also, again if needed, you may need to insert few rows into these tables before running tests.\n",Object(o.b)("strong",{parentName:"p"},"Hint:")," Method(s) with ",Object(o.b)("inlineCode",{parentName:"p"},"@BeforeClass"),"/",Object(o.b)("inlineCode",{parentName:"p"},"@Before")," annotations can be helpful to set things up the way you want before tests are executed."))))),Object(o.b)("div",{className:"admonition admonition-caution alert alert--warning"},Object(o.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(o.b)("h5",{parentName:"div"},Object(o.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(o.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"}),Object(o.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"})))),"caution")),Object(o.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(o.b)("p",{parentName:"div"},"If you had copied MyBooksApp repo before, make sure to get a fresh copy to start with as there have been a few minor adjustments to the code!"))),Object(o.b)("h2",{id:"submission"},"Submission"),Object(o.b)("p",null,"In your group repo, create a new folder named ",Object(o.b)("inlineCode",{parentName:"p"},"homeworks"),". Under ",Object(o.b)("inlineCode",{parentName:"p"},"homeworks"),", create a subfolder named ",Object(o.b)("inlineCode",{parentName:"p"},"hw2"),". Push all your files under ",Object(o.b)("inlineCode",{parentName:"p"},"homeworks/hw2")," folder. Create a ",Object(o.b)("inlineCode",{parentName:"p"},"README.md")," in ",Object(o.b)("inlineCode",{parentName:"p"},"homeworks/hw2")," folder and include in it all the assumptions made, work done, etc. When finished, zip the ",Object(o.b)("inlineCode",{parentName:"p"},"hw2")," folder and submit it as a single file to Gradescope.    "),Object(o.b)("div",{className:"admonition admonition-info alert alert--info"},Object(o.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(o.b)("h5",{parentName:"div"},Object(o.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(o.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(o.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"})))),"info")),Object(o.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(o.b)("p",{parentName:"div"},"Note that moving forward with homeworks, each group makes one submission."))))}p.isMDXComponent=!0}}]);