(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{143:function(e,t,a){"use strict";a.d(t,"a",(function(){return d})),a.d(t,"b",(function(){return j}));var n=a(0),i=a.n(n);function o(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function c(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){o(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function b(e,t){if(null==e)return{};var a,n,i=function(e,t){if(null==e)return{};var a,n,i={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var s=i.a.createContext({}),m=function(e){var t=i.a.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):c(c({},t),e)),a},d=function(e){var t=m(e.components);return i.a.createElement(s.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return i.a.createElement(i.a.Fragment,{},t)}},p=i.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,o=e.originalType,r=e.parentName,s=b(e,["components","mdxType","originalType","parentName"]),d=m(a),p=n,j=d["".concat(r,".").concat(p)]||d[p]||l[p]||o;return a?i.a.createElement(j,c(c({ref:t},s),{},{components:a})):i.a.createElement(j,c({ref:t},s))}));function j(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=a.length,r=new Array(o);r[0]=p;var c={};for(var b in t)hasOwnProperty.call(t,b)&&(c[b]=t[b]);c.originalType=e,c.mdxType="string"==typeof e?e:n,r[1]=c;for(var s=2;s<o;s++)r[s]=a[s];return i.a.createElement.apply(null,r)}return i.a.createElement.apply(null,a)}p.displayName="MDXCreateElement"},71:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return o})),a.d(t,"metadata",(function(){return r})),a.d(t,"rightToc",(function(){return c})),a.d(t,"default",(function(){return s}));var n=a(2),i=(a(0),a(143));const o={id:"it1",title:"Iteration 1"},r={unversionedId:"proj/it1",id:"proj/it1",isDocsHomePage:!1,title:"Iteration 1",description:"Overview",source:"@site/docs\\proj\\it1.md",permalink:"/cs421_f20/docs/proj/it1",editUrl:"https://darvishdarab.github.io/cs421_f20/docs/proj/it1.md"},c=[{value:"Overview",id:"overview",children:[{value:"Class Diagram",id:"class-diagram",children:[]},{value:"Project Planning: Giuthub Project Board",id:"project-planning-giuthub-project-board",children:[]},{value:"Implementation",id:"implementation",children:[]},{value:"Submission",id:"submission",children:[]}]}],b={rightToc:c};function s({components:e,...t}){return Object(i.b)("wrapper",Object(n.a)({},b,t,{components:e,mdxType:"MDXLayout"}),Object(i.b)("h2",{id:"overview"},"Overview"),Object(i.b)("p",null,"These are the deadlines for this iteration. "),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",Object(n.a)({parentName:"tr"},{align:null})),Object(i.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Day"),Object(i.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Date"),Object(i.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Time"))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Upload Requirement Specifications (SRS)"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Thu"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"10/1"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"11:00 PM")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Upload UML Class Diagram"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Thu"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"10/1"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"11:00 PM")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Create Project Planning"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Thu"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"10/1"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"11:00 PM")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Deliverable (source code of a working app)"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Tue"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"10/6"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"11:00 PM")))),Object(i.b)("p",null,"In your group repo, there is a folder named ",Object(i.b)("inlineCode",{parentName:"p"},"docs")," under which there is the ",Object(i.b)("inlineCode",{parentName:"p"},"SRS.md")," file. Use this to write the SRS for your project idea. This will be similar to what you did in HW1. "),Object(i.b)("div",{className:"admonition admonition-info alert alert--info"},Object(i.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(i.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(i.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"})))),"DEADLINE")),Object(i.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(i.b)("p",{parentName:"div"},"You have until ",Object(i.b)("em",{parentName:"p"},"Thursday 10/1 11pm")," to complete and turn this step in."))),Object(i.b)("h3",{id:"class-diagram"},"Class Diagram"),Object(i.b)("p",null,"Add image file(s) named ",Object(i.b)("inlineCode",{parentName:"p"},"class_diagramX")," under the ",Object(i.b)("inlineCode",{parentName:"p"},"docs")," folder (X being 1, 2, 3, ...). Use any common image format you like e.g. jpg, jpeg, png, bmp etc. The image(s) should provide the UML class diagram of your project. This does not have to be complicated for now. Start Simple! You will refine/enhance this as you make progress through the iterations. Though, while desiging your system, have in mind good design characteristics that we talked about in class: ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"docs/readings/cohesion"}),Object(i.b)("em",{parentName:"a"},"high cohesion"))," and ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"docs/readings/coupling"}),Object(i.b)("em",{parentName:"a"},"low coupling")),"!"),Object(i.b)("div",{className:"admonition admonition-caution alert alert--warning"},Object(i.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(i.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"}),Object(i.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"})))),"caution")),Object(i.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(i.b)("p",{parentName:"div"},"The class diagram image file(s) must be uploaded in your repo under ",Object(i.b)("inlineCode",{parentName:"p"},"docs")," folder; do not link images!"))),Object(i.b)("div",{className:"admonition admonition-info alert alert--info"},Object(i.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(i.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(i.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"})))),"DEADLINE")),Object(i.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(i.b)("p",{parentName:"div"},"You have until ",Object(i.b)("em",{parentName:"p"},"Thursday 10/1 11pm")," to complete and turn this in."))),Object(i.b)("h3",{id:"project-planning-giuthub-project-board"},"Project Planning: Giuthub Project Board"),Object(i.b)("p",null,"You need to plan out your tasks using Github Project. Open your project repo on Github, open ",Object(i.b)("inlineCode",{parentName:"p"},"Project")," tab, and create a new project named ",Object(i.b)("inlineCode",{parentName:"p"},"Project Backlog"),". Leave ",Object(i.b)("inlineCode",{parentName:"p"},"Template")," as ",Object(i.b)("inlineCode",{parentName:"p"},"None"),'. Create three columns: 1) "It1-To Do" with ',Object(i.b)("em",{parentName:"p"},"preset")," ",Object(i.b)("inlineCode",{parentName:"p"},"To do"),' 2) "It1-In Progress" with ',Object(i.b)("em",{parentName:"p"},"preset")," ",Object(i.b)("inlineCode",{parentName:"p"},"In Progress"),', and 3) "It1-Done" with preset ',Object(i.b)("inlineCode",{parentName:"p"},"Done"),". You will need to keep the colmuns updated as you develop your app. List all your ",Object(i.b)("em",{parentName:"p"},"to do"),' tasks extracted from the user story or user stories you plan to finish for iteration 1 under the "It1-To Do" column. When you start working on a task, move it under the "It1-In Progress" column, and when it is completed list it under the "It1-Done" column.'),Object(i.b)("div",{className:"admonition admonition-info alert alert--info"},Object(i.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(i.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(i.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"})))),"info")),Object(i.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(i.b)("p",{parentName:"div"},"You do not need to have a long list of tasks to complete for iteration 1. Aim low and hit! Pick one or two simple user stories, create a list of tasks to deliver those user stories and get to work! The primary idea here is to get into the habit of leveraging Github Project to document your work items and keep track of the progress."))),Object(i.b)("div",{className:"admonition admonition-info alert alert--info"},Object(i.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(i.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(i.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"})))),"info")),Object(i.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(i.b)("p",{parentName:"div"},"Note there is not necessarily a one-on-one mapping between a user story and a task. To implement a user story, you might need to complete a number of tasks, or a task might serve more than one user story, or might not even be related to any particular user story. Use your columns for the ",Object(i.b)("em",{parentName:"p"},"tasks")," that are actively on your project's radar."))),Object(i.b)("div",{className:"admonition admonition-info alert alert--info"},Object(i.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(i.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(i.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"})))),"info")),Object(i.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(i.b)("p",{parentName:"div"},"It is a good idea to connect/convert your project cards to Github issues, but it is not a requirement. At minimum you need to have the three columns and they must be kept updated at all times."))),Object(i.b)("h3",{id:"implementation"},"Implementation"),Object(i.b)("p",null,"Aim to finish at least one user story by the end of Iteration 1 (Tuesday ",Object(i.b)("strong",{parentName:"p"},"10/6")," ",Object(i.b)("strong",{parentName:"p"},"11 PM"),"). At the end of iteration 1, you must deliver a software that does what you have listed in the iteration backlog. Break things down and each person in the group must be responsible for a number of tasks/user stories. Be a team player. Commit/push often. Keep you project backlog and design (class diagram) current."),Object(i.b)("div",{className:"admonition admonition-caution alert alert--warning"},Object(i.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(i.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"}),Object(i.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"})))),"caution")),Object(i.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(i.b)("p",{parentName:"div"},"You must inculed a ",Object(i.b)("inlineCode",{parentName:"p"},"README.md")," at the top level of your project folder that serves as a manual for your project. I, as the user of your app, should be able to get an idea what this app is about and be able to run and use it by looking at ",Object(i.b)("inlineCode",{parentName:"p"},"README.md"),"."))),Object(i.b)("div",{className:"admonition admonition-info alert alert--info"},Object(i.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(i.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(i.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"})))),"info")),Object(i.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(i.b)("p",{parentName:"div"},"Write JUnit tests for your implementations as much as you can. We will not require you to write tests, but writing them are strongly recommended."))),Object(i.b)("h3",{id:"submission"},"Submission"),Object(i.b)("p",null,"We will consider your last commit (i.e. last push to your group repo) by ",Object(i.b)("strong",{parentName:"p"},"Tue 10/6 11 PM")," as your submission for this iteration."),Object(i.b)("div",{className:"admonition admonition-caution alert alert--warning"},Object(i.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(i.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"}),Object(i.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"})))),"Gradescope submission not needed!")),Object(i.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(i.b)("p",{parentName:"div"},"You do not need to submit to Gradescope for iteration submissions. We use Gradescope for homeworks only."))))}s.isMDXComponent=!0}}]);