(window.webpackJsonp=window.webpackJsonp||[]).push([[54],{113:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return i})),r.d(t,"metadata",(function(){return s})),r.d(t,"rightToc",(function(){return p})),r.d(t,"default",(function(){return l}));var n=r(2),o=r(6),a=(r(0),r(167)),i={id:"key_value_persister",title:"Implement a Key-Value Store Persister",sidebar_label:"Key-Value Store Persister"},s={unversionedId:"readings/persistence/key_value_persister",id:"readings/persistence/key_value_persister",isDocsHomePage:!1,title:"Implement a Key-Value Store Persister",description:"We persisted Author objects by writing/reading their properties one after the other. This approach is prone to error because you must make sure your code matches the persisted format for both reading and writing. If you change the Author class - for example, adding a dateOfBirth field to it - then you may no longer be able to read from old files because some lines could be read into the wrong properties. A potential solution is to save the data as key-value pairs. Java has the Properties class, which you can use to store value strings with associated key strings:",source:"@site/docs\\readings\\persistence\\key_value_persister.md",permalink:"/cs421_f20/docs/readings/persistence/key_value_persister",editUrl:"https://darvishdarab.github.io/cs421_f20/docs/readings/persistence/key_value_persister.md",sidebar_label:"Key-Value Store Persister",sidebar:"docs",previous:{title:"Persist data with serialization",permalink:"/cs421_f20/docs/readings/persistence/serialization"},next:{title:"Implement POJO Persister With Gson",permalink:"/cs421_f20/docs/readings/persistence/gson"}},p=[],c={rightToc:p};function l(e){var t=e.components,r=Object(o.a)(e,["components"]);return Object(a.b)("wrapper",Object(n.a)({},c,r,{components:t,mdxType:"MDXLayout"}),Object(a.b)("p",null,"We persisted ",Object(a.b)("inlineCode",{parentName:"p"},"Author")," objects by writing/reading their properties one after the other. This approach is prone to error because you must make sure your code matches the persisted format for both reading and writing. If you change the ",Object(a.b)("inlineCode",{parentName:"p"},"Author")," class - for example, adding a ",Object(a.b)("inlineCode",{parentName:"p"},"dateOfBirth")," field to it - then you may no longer be able to read from ",Object(a.b)("em",{parentName:"p"},"old files")," because some lines could be read into the wrong properties. A potential solution is to save the data as ",Object(a.b)("strong",{parentName:"p"},"key-value pairs"),". Java has the ",Object(a.b)("inlineCode",{parentName:"p"},"Properties")," class, which you can use to store value strings with associated key strings:"),Object(a.b)("pre",null,Object(a.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),'package persistence;\nimport model.Author;\n\nimport java.io.FileReader;\nimport java.io.FileWriter;\nimport java.io.IOException;\nimport java.util.Properties;\n\npublic class PropertyAuthorPersister implements Persister<Author> {\n\n    private final static String STORE =  "Author_p.txt";\n\n    @Override\n    public void serialize(Author author) throws IOException {\n        Properties p = new Properties();\n\n        p.setProperty("name", author.getName());\n        p.setProperty("numOfBooks", String.valueOf(author.getNumOfBooks()));\n        p.setProperty("nationality", author.getNationality());\n\n        FileWriter fw = new FileWriter(STORE);\n        p.store(fw, "comment"); // replace "comment" with any relevant comment!\n        fw.close();\n    }\n\n    @Override\n    public Author deserialize() throws IOException {\n        Properties p = new Properties();\n        FileReader fr = new FileReader(STORE);\n        p.load(fr);\n        fr.close();\n\n        String name = p.getProperty("name");\n        String numOfBooks = p.getProperty("numOfBooks");\n        String nationality = p.getProperty("nationality");\n\n        return new Author(name, Integer.parseInt(numOfBooks), nationality);\n    }\n\n}\n')),Object(a.b)("p",null,"Write and run a little demo for this and check out the text file that stores the ",Object(a.b)("inlineCode",{parentName:"p"},"Author")," object."))}l.isMDXComponent=!0},167:function(e,t,r){"use strict";r.d(t,"a",(function(){return u})),r.d(t,"b",(function(){return f}));var n=r(0),o=r.n(n);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function p(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var c=o.a.createContext({}),l=function(e){var t=o.a.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},u=function(e){var t=l(e.components);return o.a.createElement(c.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},m=o.a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,a=e.originalType,i=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),u=l(r),m=n,f=u["".concat(i,".").concat(m)]||u[m]||d[m]||a;return r?o.a.createElement(f,s(s({ref:t},c),{},{components:r})):o.a.createElement(f,s({ref:t},c))}));function f(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var a=r.length,i=new Array(a);i[0]=m;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s.mdxType="string"==typeof e?e:n,i[1]=s;for(var c=2;c<a;c++)i[c]=r[c];return o.a.createElement.apply(null,i)}return o.a.createElement.apply(null,r)}m.displayName="MDXCreateElement"}}]);